{"version":3,"sources":["components/Header.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","initialState","transactions","GlobalContext","createContext","GlobalProvider","children","useReducer","state","action","type","filter","transaction","id","payload","dispatch","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","toString","replace","IncomeExpenses","amounts","income","expense","className","Transaction","sign","onClick","text","Math","abs","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Date","now","alert","document","querySelector","focus","htmlFor","onChange","target","placeholder","step","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gMAUeA,G,MARA,WACb,OACE,mD,qBCDEC,EAAgB,CACpBC,aAAc,IAIHC,EAAgBC,0BAGhBC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAepBC,sBAbP,SAACC,EAAOC,GACzB,OAAOA,EAAOC,MACZ,IAAK,qBACH,OAAO,2BAAKF,GAAZ,IAAmBN,aAAcM,EAAMN,aAAaS,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOJ,EAAOK,aACtG,IAAK,kBACH,OAAO,2BAAIN,GAAX,IAAkBN,aAAa,GAAD,mBAAMM,EAAMN,cAAZ,CAA0BO,EAAOK,YACjE,IAAK,wBACH,OAAO,2BAAIN,GAAX,IAAkBN,aAAcO,EAAOK,UACzC,QACE,OAAON,KAIoCP,GAfH,mBAevCO,EAfuC,KAehCO,EAfgC,KA+C9C,OAfAC,qBAAU,WACoC,OAAzCC,aAAaC,QAAQ,gBACtBD,aAAaE,QAAQ,eAAgBC,KAAKC,UAAU,KAEpDN,EAAS,CACPL,KAAM,wBACNI,QAASM,KAAKE,MAAML,aAAaC,QAAQ,qBAG5C,IAEHF,qBAAU,WACRC,aAAaE,QAAQ,eAAgBC,KAAKC,UAAUb,EAAMN,iBACzD,CAACM,IAEG,cAACL,EAAcoB,SAAf,CAAwBC,MAAO,CACpCtB,aAAcM,EAAMN,aACpBuB,kBA/BF,SAA2BZ,GACzBE,EAAS,CACPL,KAAM,qBACNI,QAASD,KA6BXa,eAzBF,SAAwBd,GACtBG,EAAS,CACPL,KAAM,kBACNI,QAASF,MAmBN,SAKJN,KC7CUqB,EAfC,WAAO,IAKfC,EAHmBC,qBAAW1B,GAA5BD,aAEqB4B,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UACtCC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAAGC,QAAQ,GAEnE,OACE,qCACE,8CACA,wCAAYP,EAAMQ,WAAWC,QAAQ,wBAAyB,YCkBrDC,EA5BQ,WAAO,IAItBC,EAFmBV,qBAAW1B,GAA5BD,aAEqB4B,KAAI,SAAAlB,GAAW,OAAIA,EAAYmB,UAEtDS,EAASD,EACZ5B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAE/BO,GAEmC,EAFzBF,EACb5B,QAAO,SAAAuB,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IAAM,GAErC,OACE,sBAAKQ,UAAU,oBAAf,UACE,gCACE,wCACA,oBAAGA,UAAU,aAAb,mBAAkCF,EAAOL,QAAQ,GAAGC,WAAWC,QAAQ,wBAAyB,WAElG,gCACE,yCACA,oBAAGK,UAAU,cAAb,mBAAmCD,EAAQN,QAAQ,GAAGC,WAAWC,QAAQ,wBAAyB,eCF3FM,EApBK,SAAC,GAAqB,IAAnB/B,EAAkB,EAAlBA,YAEba,EAAsBI,qBAAW1B,GAAjCsB,kBAEFmB,EAAOhC,EAAYmB,OAAS,EAAI,IAAM,IAE5C,OACE,qBAAIW,UAAW9B,EAAYmB,OAAS,EAAI,QAAU,OAAlD,UACE,gCACE,mBAAGW,UAAU,iCAAiCG,QAAS,kBAAMpB,EAAkBb,EAAYC,OAC1FD,EAAYkC,QAGf,iCAAOF,EAAP,SAAoBG,KAAKC,IAAIpC,EAAYmB,QAAQK,WAAWC,QAAQ,wBAAyB,YCIpFY,EAhBS,WAAO,IAErB/C,EAAiB2B,qBAAW1B,GAA5BD,aAER,OACE,qCACE,yCACA,oBAAIwC,UAAU,OAAd,SACGxC,EAAa4B,KAAI,SAAAlB,GAAW,OAC3B,cAAC,EAAD,CAAkCA,YAAaA,GAA7BA,EAAYC,aCkCzBqC,EA5CQ,WAAO,IAAD,EAEHC,mBAAS,IAFN,mBAEpBL,EAFoB,KAEdM,EAFc,OAGCD,mBAAS,IAHV,mBAGpBpB,EAHoB,KAGZsB,EAHY,KAInB3B,EAAmBG,qBAAW1B,GAA9BuB,eAqBR,OACE,qCACE,qDACA,uBAAM4B,SAtBO,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAiB,CACrB5C,GAAI6C,KAAKC,MACTb,OACAf,QAASA,GAGC,KAATe,GAA0B,IAAXf,GAA2B,KAAXA,EAChC6B,MAAM,wBAENlC,EAAe+B,GACfL,EAAQ,IACRC,EAAU,IACVQ,SAASC,cAAc,SAASC,UAOhC,UACE,sBAAKrB,UAAU,eAAf,UACE,uBAAOsB,QAAQ,OAAf,yBACA,uBAAOtD,KAAK,OAAOc,MAAOsB,EAAMmB,SAAU,SAAAV,GAAC,OAAIH,EAAQG,EAAEW,OAAO1C,QAAQ2C,YAAY,4BAEtF,sBAAKzB,UAAU,eAAf,UACE,wBAAOsB,QAAQ,SAAf,oBAA+B,uBAA/B,6CAEA,uBAAOtD,KAAK,SAAS0D,KAAK,MAAM5C,MAAOO,EAAQkC,SAAU,SAAAV,GAAC,OAAIF,EAAUE,EAAEW,OAAO1C,QAAQ2C,YAAY,uBAEvG,wBAAQzB,UAAU,MAAlB,oCCnBO2B,MAdf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAK3B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCJO4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.da38e92f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n  return (\n    <h2>\n      Expense Tracker\n    </h2>\n  )\n}\n\nexport default Header","import React, { createContext, useReducer, useEffect } from 'react'\n\n// init state\nconst initialState =  {\n  transactions: []\n}\n\n// create context\nexport const GlobalContext = createContext()\n\n// provider component\nexport const GlobalProvider = ({ children }) => {\n\n  const AppReducer = (state, action) => {\n    switch(action.type) {\n      case 'DELETE_TRANSACTION':\n        return { ...state, transactions: state.transactions.filter(transaction => transaction.id !== action.payload) }\n      case 'ADD_TRANSACTION':\n        return {...state, transactions: [...state.transactions, action.payload]}\n      case 'RETRIEVE_TRANSACTIONS':\n        return {...state, transactions: action.payload}\n      default:\n        return state;\n    }\n  }\n\n  const [state, dispatch] = useReducer(AppReducer, initialState)\n  \n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    })\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    })\n  }\n\n  useEffect(() => { // retrieve from local storage\n    if(localStorage.getItem('transactions') === null) {\n      localStorage.setItem('transactions', JSON.stringify([]))\n    } else {\n      dispatch({\n        type: 'RETRIEVE_TRANSACTIONS',\n        payload: JSON.parse(localStorage.getItem('transactions'))\n      })\n    }\n  }, [])\n\n  useEffect(() => { // save transactions\n    localStorage.setItem('transactions', JSON.stringify(state.transactions))\n  }, [state])\n\n  return(<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    deleteTransaction,\n    addTransaction,\n  }}>\n    {children}\n  </GlobalContext.Provider>)\n}","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst Balance = () => {\n\n  const { transactions } = useContext(GlobalContext)\n\n  const amounts = transactions.map(transaction => transaction.amount)\n  const total = amounts.reduce((acc, item) => acc + item, 0).toFixed(2)\n\n  return (\n    <>\n      <h4>Your balance</h4>\n      <h1>&#8369;{total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</h1>\n    </>\n  )\n}\n\nexport default Balance","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst IncomeExpenses = () => {\n\n  const { transactions } = useContext(GlobalContext)\n\n  const amounts = transactions.map(transaction => transaction.amount)\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => acc + item, 0)\n  \n  const expense = amounts\n    .filter(item => item < 0)\n    .reduce((acc, item) => acc + item, 0)*-1\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p className=\"money plus\">&#8369;{income.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p className=\"money minus\">&#8369;{expense.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default IncomeExpenses\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst Transaction = ({ transaction }) => {\n\n  const { deleteTransaction } = useContext(GlobalContext)\n\n  const sign = transaction.amount < 0 ? '-' : '+'\n\n  return (\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n      <div>\n        <i className=\"fas fa-times-circle delete-btn\" onClick={() => deleteTransaction(transaction.id)} />\n        {transaction.text}\n      </div>\n      \n      <span>{sign}&#8369;{Math.abs(transaction.amount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\n      {/* <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction.id)}>x</button> */}\n      \n    </li>\n  )\n}\n\nexport default Transaction\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport Transaction from './Transaction'\n\nconst TransactionList = () => {\n\n  const { transactions } = useContext(GlobalContext)\n\n  return (\n    <>\n      <h3>History</h3>\n      <ul className=\"list\">\n        {transactions.map(transaction => (\n          <Transaction key={transaction.id} transaction={transaction} />\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default TransactionList\n","import React, { useState, useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nconst AddTransaction = () => {\n  \n  const [text, setText] = useState('')\n  const [amount, setAmount] = useState('')\n  const { addTransaction } = useContext(GlobalContext)\n\n  const onSubmit = e => {\n    e.preventDefault()\n\n    const newTransaction = {\n      id: Date.now(),\n      text,\n      amount: +amount\n    }\n\n    if(text === '' || amount === 0 || amount === '') {\n      alert('Fill-in all fields.')\n    } else {\n      addTransaction(newTransaction) \n      setText('')\n      setAmount('')\n      document.querySelector('input').focus() \n    }\n  }\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Transaction</label>\n          <input type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Enter transaction...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">Amount <br />\n            (negative - expense, positive - income)</label>\n          <input type=\"number\" step=\"any\" value={amount} onChange={e => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  )\n}\n\nexport default AddTransaction\n","import './App.css';\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses'\nimport TransactionList from './components/TransactionList'\nimport AddTransaction from './components/AddTransaction'\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}